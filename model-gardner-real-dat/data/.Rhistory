flowData = read.flowSet(files = files, path="data/", transformation = F)
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info = read.csv("data/samples.csv", header = T, stringsAsFactors = F)
sample.info = read.csv("data/samples.csv", header = T, stringsAsFactors = F)
setwd("/Volumes/cblin2/ABC-Flow/model-gardner-real-dat")
sample.info = read.csv("data/samples.csv", header = T, stringsAsFactors = F)
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
t = read.csv("data/samples.csv", header = T, stringsAsFactors = F)
print(head(t))
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("data/samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
files = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = files, path="data/", transformation = F)
flowData = read.flowSet(files = files, transformation = F)
flowData = read.flowSet(files = files, path='/Volumes/cblin2/ABC-Flow/model-gardner-real-dat/data',transformation = F)
flowData = read.flowSet(files = files, transformation = F)
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
files = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = files, path="data/", transformation = F)
flowData = read.flowSet(files = files, transformation = F)
flowData = read.flowSet(files = files, transformation = F)
files = list.files(pattern = "*.fcs")
files = list.files(pattern = "data/*.fcs")
files = list.files(pattern = "data/*.fcs")
print(files)
fils = list.files(pattern = "data/*.fcs")
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("data/samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
fils = list.files(pattern = "data/*.fcs")
list.files(pattern = "data/*.fcs")
list.files(pattern = "*.fcs")
.
list.files(pattern = "/data/*.fcs")
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("data/samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
setwd("/Volumes/cblin2/ABC-Flow/model-gardner-real-dat/data")
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
list.files(pattern = "data/*.fcs")
list.files(pattern = "*.fcs")
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
fils = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = fils, transformation = F)
flowData = read.flowSet(files = fils, transformation = F)
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
fils = list.files(pattern = "*.fcs")
print(fils)
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
fils = list.files(pattern = "*.fcs")
print(fils)
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = fils, transformation = F)
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
sampleNames(flowData) = samples
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
print(samples)
print(length(samples))
print(length(sampleNames(flowData)))
print(sampleNames(flowData))
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
fils = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = fils, transformation = F)
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
#sampleNames(flowData) = samples
data = extractFlowData(flowData, samples, sample.info)
write.table(data, file = "data.csv", sep = ",", qmethod = "double")
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
packages = c("flowCore", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","gridExtra")
lapply(packages, require, character.only = TRUE)
lapply(packages, require, character.only = TRUE);
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
print(head(sample.info ))
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
print(samples)
print(length(samples))
print(head(sample.info$sample))
print(head(sample.info))
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
fils = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = fils, transformation = F)
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
print(sampleNames(flowData))
print(head(flowData))
data = extractFlowData(flowData, samples, sample.info)
setwd("~/work/PhD/LabWork/pKDL071_GFP_mCHERRY_FACS_DATA/2015_15_22_Myriam_timecourse_gfp")
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
files = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = files, transformation = F)
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
sampleNames(flowData) = samples
data = extractFlowData(flowData, samples, sample.info)
#iptg <- subset(data, inducer=="iptg")
#atc <- subset(data, inducer=="atc")
#sample1_t <- subset(iptg,  times=='0')
#sample1 <- subset(sample1_t,  repeats=='1')
#sample1_df <- data.frame(sample1)
write.table(data, file = "data_kill.csv", sep = ",", qmethod = "double")
setwd("/Volumes/cblin2/ABC-Flow/model-gardner-real-dat/data")
packages = c("flowCore", "plyr", "scales", "reshape2", "RColorBrewer","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
files = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = files, transformation = F)
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
sampleNames(flowData) = samples
data = extractFlowData(flowData, samples, sample.info)
#iptg <- subset(data, inducer=="iptg")
#atc <- subset(data, inducer=="atc")
#sample1_t <- subset(iptg,  times=='0')
#sample1 <- subset(sample1_t,  repeats=='1')
#sample1_df <- data.frame(sample1)
write.table(data, file = "data.csv", sep = ",", qmethod = "double")
setwd("~/work/PhD/LabWork/pKDL071_GFP_mCHERRY_FACS_DATA/2015_15_22_Myriam_timecourse_gfp")
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
files = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = files, transformation = F)
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
sampleNames(flowData) = samples
data = extractFlowData(flowData, samples, sample.info)
setwd("/Volumes/cblin2/ABC-Flow/model-gardner-real-dat/data")
packages = c("flowCore", "plyr", "scales", "reshape2", "RColorBrewer","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
files = list.files(pattern = "*.fcs")
flowData = read.flowSet(files = files, transformation = F)
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
sampleNames(flowData) = samples
packages = c("flowCore", "flowViz", "ggplot2", "plyr", "scales", "reshape2", "RColorBrewer","ggExtra","gridExtra")
lapply(packages, require, character.only = TRUE)
sample.info = read.csv("samples.csv", header = T, stringsAsFactors = F)
sample.info[is.na(sample.info)] <- 1.000
sample.info$sample = as.character(sample.info$sample)
sample.info$inducer = factor(sample.info$inducer, levels = c("atc","iptg"))
sample.info$repeats = factor(sample.info$repeats, levels = c("1", "2", "3"))
sample.info$times = factor(sample.info$times, levels = c("0", "1", "2","3","4","5","6","7","8","9","24"))
samples = sample.info$sample
files = list.files(pattern = "*.fcs")
extractFlowData = function(flowData, samples, sample.info) {
require("plyr")
data = vector("list", length(samples))
names(data) = samples
for (i in 1:length(samples)) {
assign(samples[i], data.frame(exprs(flowData[[i]])))
data[[i]] = get(samples[i])
}
rm(list = c(samples, "i"))
data = ldply(data, data.frame)
print(head(data))
data$.id = factor(data$.id)
data = merge(sample.info,
data,
by.x = "sample",
by.y = ".id")
}
flowData = read.flowSet(files = files, transformation = F)
colnames(flowData) = c("fscA", "sscA", "GFP-A", "fl2a", "fl3a","fl4a","fscH","sscH","GFP","fl2H","fl3H","fl4H","width","Time")
sampleNames(flowData) = samples
